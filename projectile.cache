#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("/local/zhangna1/testnan/lisa-caffe-public/" (".build_release/src/caffe/proto/caffe.pb.cc" ".projectile" "GPATH" "GRTAGS" "GTAGS" ".Doxyfile" ".gitignore" ".travis.yml" "CMakeLists.txt" "CONTRIBUTORS.md" "INSTALL.md" "LICENSE" "Makefile" "Makefile.config.example" "README.md" "caffe.cloc" "cmake/ConfigGen.cmake" "cmake/Cuda.cmake" "cmake/Dependencies.cmake" "cmake/Misc.cmake" "cmake/Modules/FindAtlas.cmake" "cmake/Modules/FindGFlags.cmake" "cmake/Modules/FindGlog.cmake" "cmake/Modules/FindLAPACK.cmake" "cmake/Modules/FindLMDB.cmake" "cmake/Modules/FindLevelDB.cmake" "cmake/Modules/FindMKL.cmake" "cmake/Modules/FindMatlabMex.cmake" "cmake/Modules/FindNumPy.cmake" "cmake/Modules/FindOpenBLAS.cmake" "cmake/Modules/FindSnappy.cmake" "cmake/Modules/FindvecLib.cmake" "cmake/ProtoBuf.cmake" "cmake/Summary.cmake" "cmake/Targets.cmake" "cmake/Templates/CaffeConfig.cmake.in" "cmake/Templates/CaffeConfigVersion.cmake.in" "cmake/Templates/caffe_config.h.in" "cmake/Utils.cmake" "cmake/lint.cmake" "data/cifar10/get_cifar10.sh" "data/coco/README.md" "data/coco/download_tools.sh" "data/coco/get_coco2014_aux.sh" "data/ilsvrc12/get_ilsvrc_aux.sh" "data/mnist/get_mnist.sh" "docs/CMakeLists.txt" "docs/CNAME" "docs/README.md" "docs/_config.yml" "docs/_layouts/default.html" "docs/development.md" "docs/images/GitHub-Mark-64px.png" "docs/images/caffeine-icon.png" "docs/index.md" "docs/install_apt.md" "docs/install_osx.md" "docs/install_yum.md" "docs/installation.md" "docs/model_zoo.md" "docs/performance_hardware.md" "docs/stylesheets/pygment_trac.css" "docs/stylesheets/reset.css" "docs/stylesheets/styles.css" "docs/tutorial/convolution.md" "docs/tutorial/data.md" "docs/tutorial/fig/.gitignore" "docs/tutorial/fig/backward.jpg" "docs/tutorial/fig/forward.jpg" "docs/tutorial/fig/forward_backward.png" "docs/tutorial/fig/layer.jpg" "docs/tutorial/fig/logreg.jpg" "docs/tutorial/forward_backward.md" "docs/tutorial/index.md" "docs/tutorial/interfaces.md" "docs/tutorial/layers.md" "docs/tutorial/loss.md" "docs/tutorial/net_layer_blob.md" "docs/tutorial/solver.md" "examples/CMakeLists.txt" "examples/LRCN_activity_recognition/action_hash_rev.p" "examples/LRCN_activity_recognition/classify_video.py" "examples/LRCN_activity_recognition/create_flow_images_LRCN.m" "examples/LRCN_activity_recognition/deploy_lstm.prototxt" "examples/LRCN_activity_recognition/deploy_singleFrame.prototxt" "examples/LRCN_activity_recognition/extract_frames.sh" "examples/LRCN_activity_recognition/lstm_solver_RGB.prototxt" "examples/LRCN_activity_recognition/lstm_solver_flow.prototxt" "examples/LRCN_activity_recognition/run_lstm_RGB.sh" "examples/LRCN_activity_recognition/run_lstm_flow.sh" "examples/LRCN_activity_recognition/run_singleFrame_RGB.sh" "examples/LRCN_activity_recognition/run_singleFrame_flow.sh" "examples/LRCN_activity_recognition/sequence_input_layer.py" "examples/LRCN_activity_recognition/singleFrame_solver_RGB.prototxt" "examples/LRCN_activity_recognition/singleFrame_solver_flow.prototxt" "examples/LRCN_activity_recognition/test_flow_singleFrame.out" "examples/LRCN_activity_recognition/train_test_lstm_RGB.prototxt" "examples/LRCN_activity_recognition/train_test_lstm_flow.prototxt" "examples/LRCN_activity_recognition/train_test_singleFrame_RGB.prototxt" "examples/LRCN_activity_recognition/train_test_singleFrame_flow.prototxt" "examples/LRCN_activity_recognition/ucf101_singleFrame_RGB_test_split1.txt" "examples/LRCN_activity_recognition/ucf101_singleFrame_RGB_train_split1.txt" "examples/LRCN_activity_recognition/ucf101_singleFrame_flow_test_split1.txt" "examples/LRCN_activity_recognition/ucf101_singleFrame_flow_train_split1.txt" "examples/LRCN_activity_recognition/ucf101_split1_testVideos.txt" "examples/LRCN_activity_recognition/ucf101_split1_trainVideos.txt" "examples/cifar10/cifar10_full.prototxt" "examples/cifar10/cifar10_full_solver.prototxt" "examples/cifar10/cifar10_full_solver_lr1.prototxt" "examples/cifar10/cifar10_full_solver_lr2.prototxt" "examples/cifar10/cifar10_full_train_test.prototxt" "examples/cifar10/cifar10_quick.prototxt" "examples/cifar10/cifar10_quick_solver.prototxt" "examples/cifar10/cifar10_quick_solver_lr1.prototxt" "examples/cifar10/cifar10_quick_train_test.prototxt" "examples/cifar10/convert_cifar_data.cpp" "examples/cifar10/create_cifar10.sh" "examples/cifar10/readme.md" "examples/cifar10/train_full.sh" "examples/cifar10/train_quick.sh" "examples/classification.ipynb" "examples/detection.ipynb" "examples/feature_extraction/imagenet_val.prototxt" "examples/feature_extraction/readme.md" "examples/filter_visualization.ipynb" "examples/finetune_flickr_style/assemble_data.py" "examples/finetune_flickr_style/flickr_style.csv.gz" "examples/finetune_flickr_style/readme.md" "examples/finetune_flickr_style/style_names.txt" "examples/finetune_pascal_detection/pascal_finetune_solver.prototxt" "examples/finetune_pascal_detection/pascal_finetune_trainval_test.prototxt" "examples/hdf5_classification.ipynb" "examples/hdf5_classification/solver.prototxt" "examples/hdf5_classification/solver2.prototxt" "examples/hdf5_classification/train_val.prototxt" "examples/hdf5_classification/train_val2.prototxt" "examples/imagenet/create_imagenet.sh" "examples/imagenet/make_imagenet_mean.sh" "examples/imagenet/readme.md" "examples/imagenet/resume_training.sh" "examples/imagenet/train_caffenet.sh" "examples/images/cat.jpg" "examples/images/cat_gray.jpg" "examples/images/fish-bike.jpg" "examples/mnist/convert_mnist_data.cpp" "examples/mnist/create_mnist.sh" "examples/mnist/lenet.prototxt" "examples/mnist/lenet_consolidated_solver.prototxt" "examples/mnist/lenet_multistep_solver.prototxt" "examples/mnist/lenet_solver.prototxt" "examples/mnist/lenet_stepearly_solver.prototxt" "examples/mnist/lenet_train_test.prototxt" "examples/mnist/mnist_autoencoder.prototxt" "examples/mnist/mnist_autoencoder_solver.prototxt" "examples/mnist/mnist_autoencoder_solver_adagrad.prototxt" "examples/mnist/mnist_autoencoder_solver_nesterov.prototxt" "examples/mnist/readme.md" "examples/mnist/train_lenet.sh" "examples/mnist/train_lenet_consolidated.sh" "examples/mnist/train_mnist_autoencoder.sh" "examples/mnist/train_mnist_autoencoder_adagrad.sh" "examples/mnist/train_mnist_autoencoder_nesterov.sh" "examples/net_surgery.ipynb" "examples/net_surgery/bvlc_caffenet_full_conv.prototxt" "examples/net_surgery/conv.prototxt" "examples/siamese/convert_mnist_siamese_data.cpp" "examples/siamese/create_mnist_siamese.sh" "examples/siamese/mnist_siamese.ipynb" "examples/siamese/mnist_siamese.prototxt" "examples/siamese/mnist_siamese_solver.prototxt" "examples/siamese/mnist_siamese_train_test.prototxt" "examples/siamese/readme.md" "examples/siamese/train_mnist_siamese.sh" "examples/web_demo/app.py" "examples/web_demo/exifutil.py" "examples/web_demo/readme.md" "examples/web_demo/requirements.txt" "examples/web_demo/templates/index.html" "include/caffe/blob.hpp" "include/caffe/caffe.hpp" "include/caffe/common.hpp" "include/caffe/common_layers.hpp" "include/caffe/data_layers.hpp" "include/caffe/data_transformer.hpp" "include/caffe/filler.hpp" "include/caffe/internal_thread.hpp" "include/caffe/layer.hpp" "include/caffe/layer_factory.hpp" "include/caffe/loss_layers.hpp" "include/caffe/net.hpp" "include/caffe/neuron_layers.hpp" "include/caffe/python_layer.hpp" "include/caffe/sequence_layers.hpp" "include/caffe/solver.hpp" "include/caffe/syncedmem.hpp" "include/caffe/test/test_caffe_main.hpp" "include/caffe/test/test_gradient_check_util.hpp" "include/caffe/util/benchmark.hpp" "include/caffe/util/cudnn.hpp" "include/caffe/util/db.hpp" "include/caffe/util/device_alternate.hpp" "include/caffe/util/gpu_util.cuh" "include/caffe/util/im2col.hpp" "include/caffe/util/insert_splits.hpp" "include/caffe/util/io.hpp" "include/caffe/util/math_functions.hpp" "include/caffe/util/mkl_alternate.hpp" "include/caffe/util/rng.hpp" "include/caffe/util/upgrade_proto.hpp" "include/caffe/vision_layers.hpp" "matlab/CMakeLists.txt" "matlab/caffe/hdf5creation/.gitignore" "matlab/caffe/hdf5creation/demo.m" "matlab/caffe/hdf5creation/store2hdf5.m" "matlab/caffe/ilsvrc_2012_mean.mat" "matlab/caffe/matcaffe.cpp" "matlab/caffe/matcaffe_batch.m" "matlab/caffe/matcaffe_demo.m" "matlab/caffe/matcaffe_demo_vgg.m" "matlab/caffe/matcaffe_demo_vgg_mean_pix.m" "matlab/caffe/matcaffe_init.m" "matlab/caffe/prepare_batch.m" "matlab/caffe/print_cell.m" "matlab/caffe/read_cell.m" "models/bvlc_alexnet/deploy.prototxt" "models/bvlc_alexnet/readme.md" "models/bvlc_alexnet/solver.prototxt" "models/bvlc_alexnet/train_val.prototxt" "models/bvlc_googlenet/deploy.prototxt" "models/bvlc_googlenet/quick_solver.prototxt" "models/bvlc_googlenet/readme.md" "models/bvlc_googlenet/solver.prototxt" "models/bvlc_googlenet/train_val.prototxt" "models/bvlc_reference_caffenet/deploy.prototxt" "models/bvlc_reference_caffenet/readme.md" "models/bvlc_reference_caffenet/solver.prototxt" "models/bvlc_reference_caffenet/train_val.prototxt" "models/bvlc_reference_rcnn_ilsvrc13/deploy.prototxt" "models/bvlc_reference_rcnn_ilsvrc13/readme.md" "models/finetune_flickr_style/deploy.prototxt" "models/finetune_flickr_style/readme.md" "models/finetune_flickr_style/solver.prototxt" "models/finetune_flickr_style/train_val.prototxt" "python/CMakeLists.txt" "python/caffe/__init__.py" "python/caffe/_caffe.cpp" "python/caffe/classifier.py" "python/caffe/detector.py" "python/caffe/draw.py" "python/caffe/imagenet/ilsvrc_2012_mean.npy" "python/caffe/io.py" "python/caffe/pycaffe.py" "python/caffe/test/test_net.py" "python/caffe/test/test_python_layer.py" "python/caffe/test/test_solver.py" "python/classify.py" "python/detect.py" "python/draw_net.py" "python/requirements.txt" "scripts/build_docs.sh" "scripts/copy_notebook.py" "scripts/cpp_lint.py" "scripts/deploy_docs.sh" "scripts/download_model_binary.py" "scripts/download_model_from_gist.sh" "scripts/gather_examples.sh" "scripts/travis/travis_build_and_test.sh" "scripts/travis/travis_install.sh" "scripts/travis/travis_setup_makefile_config.sh" "scripts/upload_model_to_gist.sh" "src/caffe/CMakeLists.txt" "src/caffe/blob.cpp" "src/caffe/common.cpp" "src/caffe/data_transformer.cpp" "src/caffe/internal_thread.cpp" "src/caffe/layer_factory.cpp" "src/caffe/layers/absval_layer.cpp" "src/caffe/layers/absval_layer.cu" "src/caffe/layers/accuracy_layer.cpp" "src/caffe/layers/argmax_layer.cpp" "src/caffe/layers/base_conv_layer.cpp" "src/caffe/layers/base_data_layer.cpp" "src/caffe/layers/base_data_layer.cu" "src/caffe/layers/bnll_layer.cpp" "src/caffe/layers/bnll_layer.cu" "src/caffe/layers/concat_layer.cpp" "src/caffe/layers/concat_layer.cu" "src/caffe/layers/contrastive_loss_layer.cpp" "src/caffe/layers/contrastive_loss_layer.cu" "src/caffe/layers/conv_layer.cpp" "src/caffe/layers/conv_layer.cu" "src/caffe/layers/cudnn_conv_layer.cpp" "src/caffe/layers/cudnn_conv_layer.cu" "src/caffe/layers/cudnn_pooling_layer.cpp" "src/caffe/layers/cudnn_pooling_layer.cu" "src/caffe/layers/cudnn_relu_layer.cpp" "src/caffe/layers/cudnn_relu_layer.cu" "src/caffe/layers/cudnn_sigmoid_layer.cpp" "src/caffe/layers/cudnn_sigmoid_layer.cu" "src/caffe/layers/cudnn_softmax_layer.cpp" "src/caffe/layers/cudnn_softmax_layer.cu" "src/caffe/layers/cudnn_tanh_layer.cpp" "src/caffe/layers/cudnn_tanh_layer.cu" "src/caffe/layers/data_layer.cpp" "src/caffe/layers/deconv_layer.cpp" "src/caffe/layers/deconv_layer.cu" "src/caffe/layers/dropout_layer.cpp" "src/caffe/layers/dropout_layer.cu" "src/caffe/layers/dummy_data_layer.cpp" "src/caffe/layers/eltwise_layer.cpp" "src/caffe/layers/eltwise_layer.cu" "src/caffe/layers/embed_layer.cpp" "src/caffe/layers/embed_layer.cu" "src/caffe/layers/euclidean_loss_layer.cpp" "src/caffe/layers/euclidean_loss_layer.cu" "src/caffe/layers/exp_layer.cpp" "src/caffe/layers/exp_layer.cu" "src/caffe/layers/flatten_layer.cpp" "src/caffe/layers/hdf5_data_layer.cpp" "src/caffe/layers/hdf5_data_layer.cu" "src/caffe/layers/hdf5_output_layer.cpp" "src/caffe/layers/hdf5_output_layer.cu" "src/caffe/layers/hinge_loss_layer.cpp" "src/caffe/layers/im2col_layer.cpp" "src/caffe/layers/im2col_layer.cu" "src/caffe/layers/image_data_layer.cpp" "src/caffe/layers/infogain_loss_layer.cpp" "src/caffe/layers/inner_product_layer.cpp" "src/caffe/layers/inner_product_layer.cu" "src/caffe/layers/loss_layer.cpp" "src/caffe/layers/lrn_layer.cpp" "src/caffe/layers/lrn_layer.cu" "src/caffe/layers/lstm_layer.cpp" "src/caffe/layers/lstm_unit_layer.cpp" "src/caffe/layers/lstm_unit_layer.cu" "src/caffe/layers/memory_data_layer.cpp" "src/caffe/layers/multinomial_logistic_loss_layer.cpp" "src/caffe/layers/mvn_layer.cpp" "src/caffe/layers/mvn_layer.cu" "src/caffe/layers/neuron_layer.cpp" "src/caffe/layers/pooling_layer.cpp" "src/caffe/layers/pooling_layer.cu" "src/caffe/layers/power_layer.cpp" "src/caffe/layers/power_layer.cu" "src/caffe/layers/prelu_layer.cpp" "src/caffe/layers/prelu_layer.cu" "src/caffe/layers/recurrent_layer.cpp" "src/caffe/layers/recurrent_layer.cu" "src/caffe/layers/relu_layer.cpp" "src/caffe/layers/relu_layer.cu" "src/caffe/layers/reshape_layer.cpp" "src/caffe/layers/rnn_layer.cpp" "src/caffe/layers/sigmoid_cross_entropy_loss_layer.cpp" "src/caffe/layers/sigmoid_cross_entropy_loss_layer.cu" "src/caffe/layers/sigmoid_layer.cpp" "src/caffe/layers/sigmoid_layer.cu" "src/caffe/layers/silence_layer.cpp" "src/caffe/layers/silence_layer.cu" "src/caffe/layers/slice_layer.cpp" "src/caffe/layers/slice_layer.cu" "src/caffe/layers/softmax_layer.cpp" "src/caffe/layers/softmax_layer.cu" "src/caffe/layers/softmax_loss_layer.cpp" "src/caffe/layers/softmax_loss_layer.cu" "src/caffe/layers/split_layer.cpp" "src/caffe/layers/split_layer.cu" "src/caffe/layers/tanh_layer.cpp" "src/caffe/layers/tanh_layer.cu" "src/caffe/layers/threshold_layer.cpp" "src/caffe/layers/threshold_layer.cu" "src/caffe/layers/window_data_layer.cpp" "src/caffe/net.cpp" "src/caffe/proto/caffe.proto" "src/caffe/solver.cpp" "src/caffe/syncedmem.cpp" "src/caffe/test/CMakeLists.txt" "src/caffe/test/test_accuracy_layer.cpp" "src/caffe/test/test_argmax_layer.cpp" "src/caffe/test/test_benchmark.cpp" "src/caffe/test/test_blob.cpp" "src/caffe/test/test_caffe_main.cpp" "src/caffe/test/test_common.cpp" "src/caffe/test/test_concat_layer.cpp" "src/caffe/test/test_contrastive_loss_layer.cpp" "src/caffe/test/test_convolution_layer.cpp" "src/caffe/test/test_data/generate_sample_data.py" "src/caffe/test/test_data/sample_data.h5" "src/caffe/test/test_data/sample_data_2_gzip.h5" "src/caffe/test/test_data/sample_data_list.txt" "src/caffe/test/test_data_layer.cpp" "src/caffe/test/test_data_transformer.cpp" "src/caffe/test/test_db.cpp" "src/caffe/test/test_deconvolution_layer.cpp" "src/caffe/test/test_dummy_data_layer.cpp" "src/caffe/test/test_eltwise_layer.cpp" "src/caffe/test/test_embed_layer.cpp" "src/caffe/test/test_euclidean_loss_layer.cpp" "src/caffe/test/test_filler.cpp" "src/caffe/test/test_flatten_layer.cpp" "src/caffe/test/test_gradient_based_solver.cpp" "src/caffe/test/test_hdf5_output_layer.cpp" "src/caffe/test/test_hdf5data_layer.cpp" "src/caffe/test/test_hinge_loss_layer.cpp" "src/caffe/test/test_im2col_kernel.cu" "src/caffe/test/test_im2col_layer.cpp" "src/caffe/test/test_image_data_layer.cpp" "src/caffe/test/test_infogain_loss_layer.cpp" "src/caffe/test/test_inner_product_layer.cpp" "src/caffe/test/test_internal_thread.cpp" "src/caffe/test/test_io.cpp" "src/caffe/test/test_layer_factory.cpp" "src/caffe/test/test_lrn_layer.cpp" "src/caffe/test/test_lstm_layer.cpp" "src/caffe/test/test_math_functions.cpp" "src/caffe/test/test_maxpool_dropout_layers.cpp" "src/caffe/test/test_memory_data_layer.cpp" "src/caffe/test/test_multinomial_logistic_loss_layer.cpp" "src/caffe/test/test_mvn_layer.cpp" "src/caffe/test/test_net.cpp" "src/caffe/test/test_neuron_layer.cpp" "src/caffe/test/test_platform.cpp" "src/caffe/test/test_pooling_layer.cpp" "src/caffe/test/test_power_layer.cpp" "src/caffe/test/test_protobuf.cpp" "src/caffe/test/test_random_number_generator.cpp" "src/caffe/test/test_reshape_layer.cpp" "src/caffe/test/test_rnn_layer.cpp" "src/caffe/test/test_sigmoid_cross_entropy_loss_layer.cpp" "src/caffe/test/test_slice_layer.cpp" "src/caffe/test/test_softmax_layer.cpp" "src/caffe/test/test_softmax_with_loss_layer.cpp" "src/caffe/test/test_solver.cpp" "src/caffe/test/test_split_layer.cpp" "src/caffe/test/test_stochastic_pooling.cpp" "src/caffe/test/test_syncedmem.cpp" "src/caffe/test/test_tanh_layer.cpp" "src/caffe/test/test_threshold_layer.cpp" "src/caffe/test/test_upgrade_proto.cpp" "src/caffe/test/test_util_blas.cpp" "src/caffe/util/benchmark.cpp" "src/caffe/util/db.cpp" "src/caffe/util/im2col.cpp" "src/caffe/util/im2col.cu" "src/caffe/util/insert_splits.cpp" "src/caffe/util/io.cpp" "src/caffe/util/math_functions.cpp" "src/caffe/util/math_functions.cu" "src/caffe/util/upgrade_proto.cpp" "src/gtest/CMakeLists.txt" "src/gtest/gtest-all.cpp" "src/gtest/gtest.h" "src/gtest/gtest_main.cc" "tools/CMakeLists.txt" "tools/caffe.cpp" "tools/compute_image_mean.cpp" "tools/convert_imageset.cpp" "tools/device_query.cpp" "tools/extra/extract_seconds.py" "tools/extra/launch_resize_and_crop_images.sh" "tools/extra/parse_log.py" "tools/extra/parse_log.sh" "tools/extra/plot_log.gnuplot.example" "tools/extra/plot_training_log.py.example" "tools/extra/resize_and_crop_images.py" "tools/extract_features.cpp" "tools/finetune_net.cpp" "tools/net_speed_benchmark.cpp" "tools/test_net.cpp" "tools/train_net.cpp" "tools/upgrade_net_proto_binary.cpp" "tools/upgrade_net_proto_text.cpp") "/local/zhangna1/testnan/nanzhang/" ("CreateHDF5/CreateHDF5.cpp" "CreateVideo/CreateVideo.sh" "CreateVideo/CreateVideo.sh~" "Evaluation/Readme.txt" "Evaluation/associate.py" "Evaluation/associate.pyc" "Evaluation/associate.py~" "Evaluation/evaluate_ate.py" "Evaluation/evaluate_rpe.py" "Evaluation/pred.txt" "Evaluation/true.txt" "Extract_Feature_V2/extract_feature_lmdb.sh" "Extract_Feature_V2/feat_helper_pb2.py" "Extract_Feature_V2/leveldb2mat.py" "Extract_Features/create_vggnet.sh" "Extract_Features/extract_feature.sh" "Extract_Features/extract_feature.sh~" "Extract_Features/feat_helper_pb2.py" "Extract_Features/getfilelist.sh" "Extract_Features/leveldb2mat.py" "Extract_Features/make_vggnet_mean.sh" "Extract_Features/train_val.prototxt" "readme.txt")))