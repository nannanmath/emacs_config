;; Object lisa-caffe-public/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisa-caffe-public/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("prPROJECT" variable (:default-value ("caffe")) nil [1 18])
            ("CONFIG_FILE" variable (:default-value ("Makefile.config")) nil [19 50])
            ("$(CONFIG_FILE)" include nil nil [50 73])
            ("BUILD_DIR_LINK" variable (:default-value ("$(BUILD_DIR)")) nil [74 105])
            ("SRC_DIRS" variable (:default-value ("$(shell find * -type d -exec bash -c \"find {} -maxdepth 1 \\
	\\( -name '*.cpp' -o -name '*.proto' \\) | grep -q .\" \\; -print)")) nil [420 556])
            ("LIB_BUILD_DIR" variable (:default-value ("$(BUILD_DIR)/lib")) nil [590 624])
            ("STATIC_NAME" variable (:default-value ("$(LIB_BUILD_DIR)/lib$(PROJECT).a")) nil [624 672])
            ("DYNAMIC_NAME" variable (:default-value ("$(LIB_BUILD_DIR)/lib$(PROJECT).so")) nil [672 722])
            ("CXX_SRCS" variable (:default-value ("$(shell find src/$(PROJECT) ! -name \"test_*.cpp\" -name \"*.cpp\")")) nil [865 941])
            ("CU_SRCS" variable (:default-value ("$(shell find src/$(PROJECT) ! -name \"test_*.cu\" -name \"*.cu\")")) nil [977 1050])
            ("TEST_MAIN_SRC" variable (:default-value ("src/$(PROJECT)/test/test_caffe_main.cpp")) nil [1088 1145])
            ("TEST_SRCS" variable (:default-value ("$(shell find src/$(PROJECT) -name \"test_*.cpp\")")) nil [1145 1206])
            ("TEST_SRCS" variable (:default-value ("$(filter-out $(TEST_MAIN_SRC), $(TEST_SRCS))")) nil [1206 1264])
            ("TEST_CU_SRCS" variable (:default-value ("$(shell find src/$(PROJECT) -name \"test_*.cu\")")) nil [1264 1327])
            ("GTEST_SRC" variable (:default-value ("src/gtest/gtest-all.cpp")) nil [1327 1364])
            ("TOOL_SRCS" variable (:default-value ("$(shell find tools -name \"*.cpp\")")) nil [1419 1466])
            ("EXAMPLE_SRCS" variable (:default-value ("$(shell find examples -name \"*.cpp\")")) nil [1527 1580])
            ("BUILD_INCLUDE_DIR" variable (:default-value ("$(BUILD_DIR)/src")) nil [1656 1694])
            ("PROTO_SRC_DIR" variable (:default-value ("src/$(PROJECT)/proto")) nil [1743 1781])
            ("PROTO_SRCS" variable (:default-value ("$(wildcard $(PROTO_SRC_DIR)/*.proto)")) nil [1781 1832])
            ("PROTO_BUILD_DIR" variable (:default-value ("$(BUILD_DIR)/$(PROTO_SRC_DIR)")) nil [1971 2020])
            ("PROTO_BUILD_INCLUDE_DIR" variable (:default-value ("$(BUILD_INCLUDE_DIR)/$(PROJECT)/proto")) nil [2020 2085])
            ("NONGEN_CXX_SRCS" variable (:default-value ("$(shell find \\
	src/$(PROJECT) \\
	include/$(PROJECT) \\
	python/$(PROJECT) \\
	matlab/$(PROJECT) \\
	examples \\
	tools \\
	-name \"*.cpp\" -or -name \"*.hpp\" -or -name \"*.cu\" -or -name \"*.cuh\")")) nil [2193 2399])
            ("LINT_SCRIPT" variable (:default-value ("scripts/cpp_lint.py")) nil [2399 2434])
            ("LINT_OUTPUT_DIR" variable (:default-value ("$(BUILD_DIR)/.lint")) nil [2434 2472])
            ("LINT_EXT" variable (:default-value ("lint.txt")) nil [2472 2493])
            ("LINT_OUTPUTS" variable (:default-value ("$(addsuffix .$(LINT_EXT), $(addprefix $(LINT_OUTPUT_DIR)/, $(NONGEN_CXX_SRCS)))")) nil [2493 2589])
            ("EMPTY_LINT_REPORT" variable (:default-value ("$(BUILD_DIR)/.$(LINT_EXT)")) nil [2589 2636])
            ("NONEMPTY_LINT_REPORT" variable (:default-value ("$(BUILD_DIR)/$(LINT_EXT)")) nil [2636 2685])
            ("PY" function (:arguments ("=" "python/$(PROJECT)/_$(PROJECT).cpp")) nil [2741 2795])
            ("PY" function (:arguments ("=" "python/$(PROJECT)/_$(PROJECT).so")) nil [2795 2847])
            ("PY" function (:arguments ("=" "include/$(PROJECT)/python_layer.hpp")) nil [2847 2903])
            ("MAT" function (:arguments ("=" "matlab/$(PROJECT)/mat$(PROJECT).cpp")) nil [2960 3017])
            ("MAT" function (:arguments ("=" "matlab/$(PROJECT)/$(PROJECT).$(MAT_SO_EXT)")) nil [3095 3158])
            ("PROTO_GEN_HEADER_SRCS" variable (:default-value ("$(addprefix $(PROTO_BUILD_DIR)/, \\
		$(notdir ${PROTO_SRCS:.proto=.pb.h}))")) nil [3289 3389])
            ("PROTO_GEN_HEADER" variable (:default-value ("$(addprefix $(PROTO_BUILD_INCLUDE_DIR)/, \\
		$(notdir ${PROTO_SRCS:.proto=.pb.h}))")) nil [3389 3492])
            ("PROTO_GEN_CC" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${PROTO_SRCS:.proto=.pb.cc})")) nil [3492 3564])
            ("PY_PROTO_BUILD_DIR" variable (:default-value ("python/$(PROJECT)/proto")) nil [3564 3610])
            ("PY_PROTO_INIT" variable (:default-value ("python/$(PROJECT)/proto/__init__.py")) nil [3610 3663])
            ("PROTO_GEN_PY" variable (:default-value ("$(foreach file,${PROTO_SRCS:.proto=_pb2.py}, \\
		$(PY_PROTO_BUILD_DIR)/$(notdir $(file)))")) nil [3663 3769])
            ("CXX_OBJS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${CXX_SRCS:.cpp=.o})")) nil [3932 3992])
            ("CU_OBJS" variable (:default-value ("$(addprefix $(BUILD_DIR)/cuda/, ${CU_SRCS:.cu=.o})")) nil [3992 4054])
            ("PROTO_OBJS" variable (:default-value ("${PROTO_GEN_CC:.cc=.o}")) nil [4054 4091])
            ("OBJS" variable (:default-value ("$(PROTO_OBJS)" "$(CXX_OBJS)" "$(CU_OBJS)")) nil [4091 4136])
            ("TOOL_OBJS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${TOOL_SRCS:.cpp=.o})")) nil [4170 4232])
            ("TOOL_BUILD_DIR" variable (:default-value ("$(BUILD_DIR)/tools")) nil [4232 4269])
            ("TEST_CXX_BUILD_DIR" variable (:default-value ("$(BUILD_DIR)/src/$(PROJECT)/test")) nil [4269 4324])
            ("TEST_CU_BUILD_DIR" variable (:default-value ("$(BUILD_DIR)/cuda/src/$(PROJECT)/test")) nil [4324 4383])
            ("TEST_CXX_OBJS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${TEST_SRCS:.cpp=.o})")) nil [4383 4449])
            ("TEST_CU_OBJS" variable (:default-value ("$(addprefix $(BUILD_DIR)/cuda/, ${TEST_CU_SRCS:.cu=.o})")) nil [4449 4521])
            ("TEST_OBJS" variable (:default-value ("$(TEST_CXX_OBJS)" "$(TEST_CU_OBJS)")) nil [4521 4567])
            ("GTEST_OBJ" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${GTEST_SRC:.cpp=.o})")) nil [4567 4629])
            ("EXAMPLE_OBJS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${EXAMPLE_SRCS:.cpp=.o})")) nil [4629 4697])
            ("DEPS" variable (:default-value ("${CXX_OBJS:.o=.d}" "${CU_OBJS:.o=.d}" "${TEST_CXX_OBJS:.o=.d}" "${TEST_CU_OBJS:.o=.d}")) nil [4748 4839])
            ("TOOL_BINS" variable (:default-value ("${TOOL_OBJS:.o=.bin}")) nil [4870 4904])
            ("EXAMPLE_BINS" variable (:default-value ("${EXAMPLE_OBJS:.o=.bin}")) nil [4904 4944])
            ("TOOL_BIN_LINKS" variable (:default-value ("${TOOL_BINS:.bin=}")) nil [4997 5034])
            ("TEST_BIN_DIR" variable (:default-value ("$(BUILD_DIR)/test")) nil [5089 5123])
            ("TEST_CU_BINS" variable (:default-value ("$(addsuffix .testbin,$(addprefix $(TEST_BIN_DIR)/, \\
		$(foreach obj,$(TEST_CU_OBJS),$(basename $(notdir $(obj))))))")) nil [5123 5256])
            ("TEST_CXX_BINS" variable (:default-value ("$(addsuffix .testbin,$(addprefix $(TEST_BIN_DIR)/, \\
		$(foreach obj,$(TEST_CXX_OBJS),$(basename $(notdir $(obj))))))")) nil [5256 5391])
            ("TEST_BINS" variable (:default-value ("$(TEST_CXX_BINS)" "$(TEST_CU_BINS)")) nil [5391 5437])
            ("TEST_ALL_BIN" variable (:default-value ("$(TEST_BIN_DIR)/test_all.testbin")) nil [5501 5550])
            ("WARNS_EXT" variable (:default-value ("warnings.txt")) nil [5654 5680])
            ("CXX_WARNS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${CXX_SRCS:.cpp=.o.$(WARNS_EXT)})")) nil [5680 5754])
            ("CU_WARNS" variable (:default-value ("$(addprefix $(BUILD_DIR)/cuda/, ${CU_SRCS:.cu=.o.$(WARNS_EXT)})")) nil [5754 5830])
            ("TOOL_WARNS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${TOOL_SRCS:.cpp=.o.$(WARNS_EXT)})")) nil [5830 5906])
            ("EXAMPLE_WARNS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${EXAMPLE_SRCS:.cpp=.o.$(WARNS_EXT)})")) nil [5906 5988])
            ("TEST_WARNS" variable (:default-value ("$(addprefix $(BUILD_DIR)/, ${TEST_SRCS:.cpp=.o.$(WARNS_EXT)})")) nil [5988 6064])
            ("TEST_CU_WARNS" variable (:default-value ("$(addprefix $(BUILD_DIR)/cuda/, ${TEST_CU_SRCS:.cu=.o.$(WARNS_EXT)})")) nil [6064 6150])
            ("ALL_CXX_WARNS" variable (:default-value ("$(CXX_WARNS)" "$(TOOL_WARNS)" "$(EXAMPLE_WARNS)" "$(TEST_WARNS)")) nil [6150 6225])
            ("ALL_CU_WARNS" variable (:default-value ("$(CU_WARNS)" "$(TEST_CU_WARNS)")) nil [6225 6270])
            ("ALL_WARNS" variable (:default-value ("$(ALL_CXX_WARNS)" "$(ALL_CU_WARNS)")) nil [6270 6316])
            ("EMPTY_WARN_REPORT" variable (:default-value ("$(BUILD_DIR)/.$(WARNS_EXT)")) nil [6317 6365])
            ("NONEMPTY_WARN_REPORT" variable (:default-value ("$(BUILD_DIR)/$(WARNS_EXT)")) nil [6365 6415])
            ("CUDA_INCLUDE_DIR" variable (:default-value ("$(CUDA_DIR)/include")) nil [6515 6555])
            ("CUDA_LIB_DIR" variable nil nil [6556 6572])
            ("CUDA_LIB_DIR" variable (:default-value ("$(CUDA_DIR)/lib")) nil [6693 6725])
            ("INCLUDE_DIRS" variable (:default-value ("$(BUILD_INCLUDE_DIR)" "./src" "./include")) nil [6726 6779])
            ("LIBRARIES" variable (:default-value ("glog" "gflags" "protobuf" "leveldb" "snappy" "lmdb" "boost_system" "hdf5_hl" "hdf5" "m" "opencv_core" "opencv_highgui" "opencv_imgproc")) nil [6913 7043])
            ("PYTHON_LIBRARIES" variable (:default-value ("boost_python" "python2.7")) nil [7043 7086])
            ("WARNINGS" variable (:default-value ("-Wall" "-Wno-sign-compare")) nil [7086 7122])
            ("DISTRIBUTE_SUBDIRS" variable (:default-value ("$(DISTRIBUTE_DIR)/bin" "$(DISTRIBUTE_DIR)/lib")) nil [7210 7276])
            ("DIST_ALIASES" variable (:default-value ("dist")) nil [7276 7297])
            ("ALL_BUILD_DIRS" variable (:default-value ("$(sort $(BUILD_DIR) $(addprefix $(BUILD_DIR)/, $(SRC_DIRS)) \\
	$(addprefix $(BUILD_DIR)/cuda/, $(SRC_DIRS)) \\
	$(LIB_BUILD_DIR) $(TEST_BIN_DIR) $(PY_PROTO_BUILD_DIR) $(LINT_OUTPUT_DIR) \\
	$(DISTRIBUTE_SUBDIRS) $(PROTO_BUILD_INCLUDE_DIR))")) nil [7379 7635])
            ("DOXYGEN_SOURCES" variable (:default-value ("$(shell find \\
	src/$(PROJECT) \\
	include/$(PROJECT) \\
	python/ \\
	matlab/ \\
	examples \\
	tools \\
	-name \"*.cpp\" -or -name \"*.hpp\" -or -name \"*.cu\" -or -name \"*.cuh\" -or \\
        -name \"*.py\" -or -name \"*.m\")")) nil [7957 8186])
            ("DOXYGEN_SOURCES" variable (:default-value ("$(DOXYGEN_CONFIG_FILE)")) nil [8186 8228])
            ("UNAME" variable (:default-value ("$(shell uname -s)")) nil [8332 8359])
            ("INCLUDE_DIRS" variable (:default-value ("$(BLAS_INCLUDE)")) nil [11809 11841])
            ("LIBRARY_DIRS" variable (:default-value ("$(BLAS_LIB)")) nil [11841 11869])
            ("LIBRARY_DIRS" variable (:default-value ("$(LIB_BUILD_DIR)")) nil [11870 11903])
            ("CXXFLAGS" variable (:default-value ("-MMD" "-MP")) nil [11967 11988])
            ("COMMON_FLAGS" variable (:default-value ("$(foreach includedir,$(INCLUDE_DIRS),-I$(includedir))")) nil [12013 12083])
            ("CXXFLAGS" variable (:default-value ("-pthread" "-fPIC" "$(COMMON_FLAGS)" "$(WARNINGS)")) nil [12083 12138])
            ("NVCCFLAGS" variable (:default-value ("-ccbin=$(CXX)" "-Xcompiler" "-fPIC" "$(COMMON_FLAGS)")) nil [12138 12198])
            ("MATLAB_CXXFLAGS" variable (:default-value ("$(CXXFLAGS)" "-Wno-uninitialized")) nil [12268 12318])
            ("LINKFLAGS" variable (:default-value ("-pthread" "-fPIC" "$(COMMON_FLAGS)" "$(WARNINGS)")) nil [12318 12374])
            ("LDFLAGS" variable (:default-value ("$(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir))" "$(PKG_CONFIG)" "$(foreach library,$(LIBRARIES),-l$(library))")) nil [12498 12626])
            ("PYTHON_LDFLAGS" variable (:default-value ("$(LDFLAGS)" "$(foreach library,$(PYTHON_LIBRARIES),-l$(library))")) nil [12626 12707])
            ("SUPERCLEAN_EXTS" variable (:default-value (".so" ".a" ".o" ".bin" ".testbin" ".pb.cc" ".pb.h" "_pb2.py" ".cuo")) nil [13150 13219])
            ("EVERYTHING_TARGETS" variable (:default-value ("all" "py$(PROJECT)" "test" "warn" "lint")) nil [13270 13324])
            (".PHONY" function (:arguments ("all" "test" "clean" "docs" "linecount" "lint" "lintclean" "tools" "examples" "$(DIST_ALIASES)" "py" "mat" "py$(PROJECT)" "mat$(PROJECT)" "proto" "runtest" "superclean" "supercleanlist" "supercleanfiles" "warn" "everything")) nil [13550 13746])
            ("all" function (:arguments ("$(STATIC_NAME)" "$(DYNAMIC_NAME)" "tools" "examples")) nil [13747 13798])
            ("everything" function (:arguments ("$(EVERYTHING_TARGETS)")) nil [13799 13833])
            ("linecount" function nil nil [13834 13954])
            ("lint" function (:arguments ("$(EMPTY_LINT_REPORT)")) nil [13955 13982])
            ("lintclean" function nil nil [13983 14070])
            ("docs" function (:arguments ("$(DOXYGEN_OUTPUT_DIR)")) nil [14071 14160])
            ("$(DOXYGEN_OUTPUT_DIR)" function (:arguments ("$(DOXYGEN_CONFIG_FILE)" "$(DOXYGEN_SOURCES)")) nil [14161 14269])
            ("$(EMPTY_LINT_REPORT)" function (:arguments ("$(LINT_OUTPUTS)" "|" "$(BUILD_DIR)")) nil [14270 14551])
            ("$(LINT_OUTPUTS)" function (:arguments ("$(LINT_OUTPUT_DIR)/%.lint.txt" ":" "%" "$(LINT_SCRIPT)" "|" "$(LINT_OUTPUT_DIR)")) nil [14552 14788])
            ("test" function (:arguments ("$(TEST_ALL_BIN)" "$(TEST_ALL_DYNLINK_BIN)" "$(TEST_BINS)")) nil [14789 14848])
            ("tools" function (:arguments ("$(TOOL_BINS)" "$(TOOL_BIN_LINKS)")) nil [14849 14887])
            ("examples" function (:arguments ("$(EXAMPLE_BINS)")) nil [14888 14914])
            ("py" function (:arguments ("py")) nil [14915 14932])
            ("py" function (:arguments ("$(PY$(PROJECT)_SO)" "$(PROTO_GEN_PY)")) nil [14933 14972])
            ("$(PY$(PROJECT)_SO)" function (:arguments ("$(PY$(PROJECT)_SRC)" "$(PY$(PROJECT)_HXX)" "|" "$(DYNAMIC_NAME)")) nil [14973 15216])
            ("mat" function (:arguments ("mat")) nil [15217 15236])
            ("mat" function (:arguments ("$(MAT$(PROJECT)_SO)")) nil [15237 15262])
            ("$(MAT$(PROJECT)_SO)" function (:arguments ("$(MAT$(PROJECT)_SRC)" "$(STATIC_NAME)")) nil [15263 15662])
            ("runtest" function (:arguments ("$(TEST_ALL_BIN)")) nil [15663 15775])
            ("pytest" function (:arguments ("py")) nil [15776 15841])
            ("warn" function (:arguments ("$(EMPTY_WARN_REPORT)")) nil [15842 15869])
            ("$(EMPTY_WARN_REPORT)" function (:arguments ("$(ALL_WARNS)" "|" "$(BUILD_DIR)")) nil [15870 16160])
            ("$(ALL_WARNS)" function (:arguments ("%.o.$(WARNS_EXT)" ":" "%.o")) nil [16161 16198])
            ("$(BUILD_DIR_LINK)" function (:arguments ("$(BUILD_DIR)/.linked")) nil [16199 16239])
            ("$(BUILD_DIR)" function nil nil [16439 16604])
            ("$(ALL_BUILD_DIRS)" function (:arguments ("|" "$(BUILD_DIR_LINK)")) nil [16605 16659])
            ("$(DYNAMIC_NAME)" function (:arguments ("$(OBJS)" "|" "$(LIB_BUILD_DIR)")) nil [16660 16796])
            ("$(STATIC_NAME)" function (:arguments ("$(OBJS)" "|" "$(LIB_BUILD_DIR)")) nil [16797 16880])
            ("$(BUILD_DIR)" function (:arguments ("%.cpp" "|" "$(ALL_BUILD_DIRS)")) nil [16881 17055])
            ("$(PROTO_BUILD_DIR)" function (:arguments ("$(PROTO_BUILD_DIR)/%.pb.cc" "$(PROTO_GEN_HEADER)" "|" "$(PROTO_BUILD_DIR)")) nil [17056 17285])
            ("$(BUILD_DIR)" function (:arguments ("%.cu" "|" "$(ALL_BUILD_DIRS)")) nil [17286 17581])
            ("$(TEST_ALL_BIN)" function (:arguments ("$(TEST_MAIN_SRC)" "$(TEST_OBJS)" "$(GTEST_OBJ)" "|" "$(DYNAMIC_NAME)" "$(TEST_BIN_DIR)")) nil [17582 17834])
            ("$(TEST_CU_BINS)" function (:arguments ("$(TEST_BIN_DIR)/%.testbin:" "$(TEST_CU_BUILD_DIR)/%.o" "$(GTEST_OBJ)" "|" "$(DYNAMIC_NAME)" "$(TEST_BIN_DIR)")) nil [17835 18088])
            ("$(TEST_CXX_BINS)" function (:arguments ("$(TEST_BIN_DIR)/%.testbin:" "$(TEST_CXX_BUILD_DIR)/%.o" "$(GTEST_OBJ)" "|" "$(DYNAMIC_NAME)" "$(TEST_BIN_DIR)")) nil [18089 18344])
            ("$(TOOL_BUILD_DIR)" function (:arguments ("$(TOOL_BUILD_DIR)/%.bin" "|" "$(TOOL_BUILD_DIR)")) nil [18423 18526])
            ("$(TOOL_BINS)" function (:arguments ("%.bin" ":" "%.o" "|" "$(DYNAMIC_NAME)")) nil [18527 18682])
            ("$(EXAMPLE_BINS)" function (:arguments ("%.bin" ":" "%.o" "|" "$(DYNAMIC_NAME)")) nil [18683 18844])
            ("proto" function (:arguments ("$(PROTO_GEN_CC)" "$(PROTO_GEN_HEADER)")) nil [18845 18888])
            ("$(PROTO_BUILD_DIR)" function (:arguments ("$(PROTO_SRC_DIR)/%.proto" "|" "$(PROTO_BUILD_DIR)")) nil [18889 19086])
            ("$(PROTO_BUILD_DIR)" function (:arguments ("$(PROTO_SRC_DIR)/%.proto" "|" "$(PROTO_BUILD_DIR)")) nil [18889 19086])
            ("$(PY_PROTO_BUILD_DIR)" function (:arguments ("$(PROTO_SRC_DIR)/%.proto" "$(PY_PROTO_INIT)" "|" "$(PY_PROTO_BUILD_DIR)")) nil [19087 19299])
            ("$(PY_PROTO_INIT)" function (:arguments ("|" "$(PY_PROTO_BUILD_DIR)")) nil [19300 19366])
            ("clean" function nil nil [19367 19562])
            ("supercleanfiles" function nil nil [19563 19717])
            ("supercleanlist" function (:arguments ("supercleanfiles")) nil [19718 19890])
            ("superclean" function (:arguments ("clean" "supercleanfiles")) nil [19891 20148])
            ("$(DIST_ALIASES)" function (:arguments ("$(DISTRIBUTE_DIR)")) nil [20149 20184])
            ("$(DISTRIBUTE_DIR)" function (:arguments ("all" "py" "|" "$(DISTRIBUTE_SUBDIRS)")) nil [20185 20705]))          
      :file "Makefile"
      :pointmax 20723
      :fsize 20722
      :lastmodtime '(21969 60334 973714 517000)
      :unmatched-syntax nil))
  :file "!local!zhangna1!testnan!lisa-caffe-public!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
